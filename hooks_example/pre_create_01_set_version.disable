CYAN='\033[0;36m'
NC='\033[0m' # No Color

# If the image is missing pull it
docker inspect --type image ${FROM_IMAGE} &>/dev/null
if [[ $? != 0 ]]; then
    docker pull ${FROM_IMAGE}
fi

# Find base docker imager (build image) version from DOCKER CHECKSUM
DOCKER_BASE_IMAGE_SHORT_CHECKSUM=`docker images --digests --quiet ${FROM_IMAGE}`

echo -e "BASE Image: ${CYAN} ${FROM_IMAGE} ${NC}"
echo -e "BASE Image checksum: ${CYAN} ${DOCKER_BASE_IMAGE_SHORT_CHECKSUM} ${NC}"

# Find docker image version from GIT SHA
DOCKER_IMAGE_GIT_SHA1=`git rev-parse HEAD`
DOCKER_IMAGE_SHORT_GIT_SHA1=`git rev-parse --short HEAD`
echo "Image commit: ${DOCKER_IMAGE_GIT_SHA1}"
echo "Image short commit: ${DOCKER_IMAGE_SHORT_GIT_SHA1}"

DOCKER_IMAGE_VERSION="${DOCKER_IMAGE_SHORT_GIT_SHA1}"

DOCKER_IMAGE_TAG=`git tag --contains ${DOCKER_IMAGE_GIT_SHA1}`
[ "${DOCKER_IMAGE_TAG}" != "" ] && echo "Found a TAG ${DOCKER_IMAGE_TAG}. I'll use it for versioning the image" && export DOCKER_IMAGE_VERSION="${DOCKER_IMAGE_TAG}"

echo -e "Base Docker image version: ${CYAN} ${DOCKER_IMAGE_VERSION} ${NC}"


# Create VERSION from build image version and the version of the core application
#export VERSION="${DOCKER_BASE_IMAGE_SHORT_CHECKSUM}-${DOCKER_IMAGE_VERSION}"
export VERSION="${DOCKER_IMAGE_VERSION}"

echo -e "Use IMAGE_VERSION: ${CYAN} ${VERSION} ${NC}"